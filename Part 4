Question 1

# include <stdio.h>
# include <stdlib.h>
# include <math.h>

void minabsvaluepair(int array[], int array_size)
{
    int count = 0;
    int l, r, min_sum, sum, min_l, min_r;
    if (array_size < 2)
    {
        printf("Invalid Input");
        return;
    }
    min_l = 0;
    min_r = 1;
    min_sum = array[0] + array[1];
    for (l = 0; l < array_size - 1; l++)
    {
        for (r = l + 1; r < array_size; r++)
        {
            sum = array[l] + array[r];
            if (abs(min_sum) > abs(sum))
            {
                min_sum = sum;
                min_l = l;
                min_r = r;
            }
        }
    }
    printf(" The two elements whose sum is minimum are %d and %d", array[min_l], array[min_r]);
}

int main()
{
    int array[] = {42, 15, -25, 30, -10, 35};
    minabsvaluepair(array, 6);
    return 0;
}


Question 2

#include <bits/stdc++.h>
using namespace std;

int main()
{
	int arr[] = { 1, 2, 3, 6, 3, 6, 1 };
	int arr_size = sizeof(arr) / sizeof(arr[0]);
	int i;
	for (i = 0; i < arr_size; i++) {
		if (arr[abs(arr[i])] >= 0)
			arr[abs(arr[i])] = -arr[abs(arr[i])];
		else
			cout << abs(arr[i]) << " ";
	}
	return 0;
}

Question 3

#include <bits/stdc++.h>
using namespace std;

int main()
{
	int arr[] = {3, 5, 4, 2, 6, 5, 6, 6, 5, 4, 8, 3};
	int n = sizeof(arr)/sizeof(arr[0]);
	int x = 3;
	int y = 6;
    int i, j;
	int min_dist = INT_MAX;
	for (i = 0; i < n; i++)
	{
		for (j = i+1; j < n; j++)
		{
			if( (x == arr[i] && y == arr[j] || y == arr[i] && x == arr[j]) && min_dist > abs(i-j))
			{
				min_dist = abs(i-j);
			}
		}
	}
	cout << "Minimum distance between " << x << " and " << y << " is " << min_dist << endl;
	return 0;
}
